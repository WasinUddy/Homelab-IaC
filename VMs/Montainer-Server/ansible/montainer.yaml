---
- name: Montainer server
  hosts: server
  remote_user: ase
  become: yes

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Disable IPv6
      sysctl:
        name: net.ipv6.conf.all.disable_ipv6
        value: 1
        state: present  
    
    # Set Up NFS client mount to TrueNAS 10.0.40.5
    - name: Install NFS client
      apt:
        name: nfs-common
        state: present
      
    - name: Mount NFS share
      mount:
        path: "/home/ase/NFS"
        src: "10.0.40.5:/mnt/Montainer-Backups"
        fstype: nfs
        state: mounted

    # Set Up Backup Script
    - name: Copy backup script
      copy:
        src: scripts/backup.py
        dest: /home/ase/backup.py
        mode: 0755

    - name: Set Backup Script to be executable
      command: chmod +x /home/ase/backup.py
    
    - name: Set up cron job for backup script on every boot
      cron:
        name: Run backup script on boot
        special_time: reboot
        job: "/usr/bin/python3 /home/ase/backup.py"

    
    # Set Up Docker
    - name: Update and upgrade all packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Install packages that allow apt to be used over HTTPS
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - gnupg

    - name: Create directory for Docker's GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      
    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present

    - name: Add Docker's repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable
        state: present
        filename: docker

    - name: Install Docker and related packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to Docker group
      ansible.builtin.user:
        name: ase
        groups: docker
        append: yes

    - name: Enable and start Docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service

    - name: Install Docker Compose
      ansible.builtin.apt:
        name: docker-compose
        state: present


    # Restore all servers
    - name: Copy restore script
      copy:
        src: scripts/restore.py
        dest: /home/ase/restore.py
        mode: 0755

    - name: Set Restore Script to be executable
      command: chmod +x /home/ase/restore.py

    - name: Run restore script
      command: /usr/bin/python3 /home/ase/restore.py
    
    - name: Setup watchtower
      ansible.builtin.command:
        cmd: docker run -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --cleanup --restart always
    